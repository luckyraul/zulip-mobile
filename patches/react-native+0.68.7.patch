diff --git a/node_modules/react-native/jest/setup.js b/node_modules/react-native/jest/setup.js
index 5bc654475..e61bbf49c 100644
--- a/node_modules/react-native/jest/setup.js
+++ b/node_modules/react-native/jest/setup.js
@@ -15,22 +15,52 @@ const mockComponent = jest.requireActual('./mockComponent');
 jest.requireActual('@react-native/polyfills/Object.es8');
 jest.requireActual('@react-native/polyfills/error-guard');

-global.__DEV__ = true;
-
-global.performance = {
-  now: jest.fn(Date.now),
-};
-
-global.Promise = jest.requireActual('promise');
-global.regeneratorRuntime = jest.requireActual('regenerator-runtime/runtime');
-global.window = global;
-
-global.requestAnimationFrame = function (callback) {
-  return setTimeout(callback, 0);
-};
-global.cancelAnimationFrame = function (id) {
-  clearTimeout(id);
-};
+Object.defineProperties(global, {
+  __DEV__: {
+    configurable: true,
+    enumerable: true,
+    value: true,
+    writable: true,
+  },
+  Promise: {
+    configurable: true,
+    enumerable: true,
+    value: jest.requireActual('promise'),
+    writable: true,
+  },
+  cancelAnimationFrame: {
+    configurable: true,
+    enumerable: true,
+    value: id => clearTimeout(id),
+    writable: true,
+  },
+  performance: {
+    configurable: true,
+    enumerable: true,
+    value: {
+      now: jest.fn(Date.now),
+    },
+    writable: true,
+  },
+  regeneratorRuntime: {
+    configurable: true,
+    enumerable: true,
+    value: jest.requireActual('regenerator-runtime/runtime'),
+    writable: true,
+  },
+  requestAnimationFrame: {
+    configurable: true,
+    enumerable: true,
+    value: callback => setTimeout(callback, 0),
+    writable: true,
+  },
+  window: {
+    configurable: true,
+    enumerable: true,
+    value: global,
+    writable: true,
+  },
+});

 // there's a __mock__ for it.
 jest.setMock(
diff --git a/node_modules/react-native/scripts/react_native_pods.rb b/node_modules/react-native/scripts/react_native_pods.rb
index f2ceeda..c618f77 100644
--- a/node_modules/react-native/scripts/react_native_pods.rb
+++ b/node_modules/react-native/scripts/react_native_pods.rb
@@ -254,6 +254,7 @@ def react_native_post_install(installer)
     cpp_flags = NEW_ARCH_OTHER_CPLUSPLUSFLAGS
   end
   modify_flags_for_new_architecture(installer, cpp_flags)
+  apply_xcode_15_patch(installer)

 end

@@ -363,7 +364,7 @@
     'source' => { :git => '' },
     'header_mappings_dir' => './',
     'platforms' => {
-      'ios' => '11.0',
+      'ios' => '12.4',
     },
     'source_files' => "**/*.{h,mm,cpp}",
     'pod_target_xcconfig' => { "HEADER_SEARCH_PATHS" =>
@@ -660,4 +661,17 @@
   # See https://github.com/facebook/flipper/issues/834 for more details.
   time_header = "#{Pod::Config.instance.installation_root.to_s}/Pods/RCT-Folly/folly/portability/Time.h"
   `sed -i -e  $'s/ && (__IPHONE_OS_VERSION_MIN_REQUIRED < __IPHONE_10_0)//' #{time_header}`
+end
+
+# Fix to build react native on Xcode 15 beta 1
+def apply_xcode_15_patch(installer)
+  installer.target_installation_results.pod_target_installation_results
+      .each do |pod_name, target_installation_result|
+          target_installation_result.native_target.build_configurations.each do |config|
+              # unary_function and binary_function are no longer provided in C++17 and newer standard modes as part of Xcode 15. They can be re-enabled with setting _LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION
+              # Ref: https://developer.apple.com/documentation/xcode-release-notes/xcode-15-release-notes#Deprecations
+              config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= '$(inherited) '
+              config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << '"_LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION" '
+      end
+  end
 end
